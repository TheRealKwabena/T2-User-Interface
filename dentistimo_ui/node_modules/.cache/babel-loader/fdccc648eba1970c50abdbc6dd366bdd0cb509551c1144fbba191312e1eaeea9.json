{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Distributed Systems Project\\\\T2-UserInterface\\\\dentistimo_ui\\\\src\\\\components\\\\GoogleMapsApi\\\\Map.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { GoogleMap, Marker, InfoWindow, useLoadScript } from \"@react-google-maps/api\";\nimport { container, locationOnLoad } from \"./mapSettings\";\nimport { dentistries } from '../../data/dentistries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [clickedDentistry, setClickedDentistry] = React.useState({});\n  const onClicked = dentistry => {\n    setClickedDentistry(dentistry);\n  };\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY\n  });\n  const mapReference = React.useRef(null);\n  const onLoad = map => {\n    mapReference.current = map;\n  };\n  const onUnMount = () => {\n    mapReference.current = null;\n  };\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: container,\n    center: locationOnLoad,\n    onUnmount: onUnMount,\n    zoom: 11,\n    children: [dentistries.map(dentistry => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: dentistry.coordinate,\n        onClick: () => {\n          onClicked(dentistry);\n        }\n      }, dentistry.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this);\n    }), clickedDentistry.coordinate && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: clickedDentistry.coordinate,\n      onCloseClick: () => setClickedDentistry({}),\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", clickedDentistry.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", clickedDentistry.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"v++9Sqo0AR/8tOalrtUgthacMYI=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","GoogleMap","Marker","InfoWindow","useLoadScript","container","locationOnLoad","dentistries","Map","clickedDentistry","setClickedDentistry","useState","onClicked","dentistry","isLoaded","googleMapsApiKey","process","env","REACT_APP_GOOGLE_KEY","mapReference","useRef","onLoad","map","current","onUnMount","coordinate","name","address"],"sources":["C:/Users/anton/Distributed Systems Project/T2-UserInterface/dentistimo_ui/src/components/GoogleMapsApi/Map.tsx"],"sourcesContent":["import React,{ useState } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n  useLoadScript\r\n} from \"@react-google-maps/api\";\r\nimport { container, locationOnLoad } from \"./mapSettings\";\r\nimport { dentistries } from '../../data/dentistries';\r\n\r\nexport type DentistryType = {\r\n    name: string,\r\n    coordinate: google.maps.LatLngLiteral,\r\n    address: string\r\n}\r\n\r\n\r\nconst Map: React.FC = () => {\r\n\r\n    const [clickedDentistry, setClickedDentistry] = React.useState<DentistryType>({} as DentistryType);\r\n\r\n    const onClicked = (dentistry: DentistryType) => {\r\n        setClickedDentistry(dentistry);\r\n    }\r\n\r\n    const { isLoaded } = useLoadScript({\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY!\r\n    });\r\n\r\n    const mapReference = React.useRef<google.maps.Map | null>(null);\r\n\r\n    const onLoad = (map: google.maps.Map): void => {\r\n        mapReference.current = map;\r\n    };\r\n\r\n    const onUnMount = (): void => {\r\n        mapReference.current = null;\r\n    };\r\n\r\n    if (!isLoaded) return <div>Loading</div>;\r\n    return (\r\n        <GoogleMap\r\n            mapContainerStyle={container}\r\n            center={locationOnLoad}\r\n            onUnmount={onUnMount}\r\n            zoom={11}\r\n        >\r\n        {\r\n            dentistries.map(dentistry => {\r\n              return (\r\n                  <Marker\r\n                      key={dentistry.name}\r\n                      position={dentistry.coordinate}\r\n                      onClick={() => { onClicked(dentistry) }}\r\n                  />\r\n              )\r\n            })\r\n        }\r\n        {\r\n            clickedDentistry.coordinate && \r\n            (\r\n                <InfoWindow\r\n                position={clickedDentistry.coordinate}\r\n                onCloseClick={() => setClickedDentistry({} as DentistryType)}  \r\n                >\r\n                <>\r\n                <p>Name: {clickedDentistry.name}</p> \r\n                <p>Address: {clickedDentistry.address}</p>            \r\n                </>         \r\n                </InfoWindow>\r\n            )\r\n        }\r\n        </GoogleMap>\r\n  );\r\n};\r\n\r\n\r\nexport default Map;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAmB,OAAO;AACtC,SACEC,SAAS,EACTC,MAAM,EACNC,UAAU,EACVC,aAAa,QACR,wBAAwB;AAC/B,SAASC,SAAS,EAAEC,cAAc,QAAQ,eAAe;AACzD,SAASC,WAAW,QAAQ,wBAAwB;AAAC;AAAA;AASrD,MAAMC,GAAa,GAAG,MAAM;EAAA;EAExB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAgB,CAAC,CAAC,CAAkB;EAElG,MAAMC,SAAS,GAAIC,SAAwB,IAAK;IAC5CH,mBAAmB,CAACG,SAAS,CAAC;EAClC,CAAC;EAED,MAAM;IAAEC;EAAS,CAAC,GAAGV,aAAa,CAAC;IAC/BW,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC;EAClC,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGnB,KAAK,CAACoB,MAAM,CAAyB,IAAI,CAAC;EAE/D,MAAMC,MAAM,GAAIC,GAAoB,IAAW;IAC3CH,YAAY,CAACI,OAAO,GAAGD,GAAG;EAC9B,CAAC;EAED,MAAME,SAAS,GAAG,MAAY;IAC1BL,YAAY,CAACI,OAAO,GAAG,IAAI;EAC/B,CAAC;EAED,IAAI,CAACT,QAAQ,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAkB;EACxC,oBACI,QAAC,SAAS;IACN,iBAAiB,EAAET,SAAU;IAC7B,MAAM,EAAEC,cAAe;IACvB,SAAS,EAAEkB,SAAU;IACrB,IAAI,EAAE,EAAG;IAAA,WAGTjB,WAAW,CAACe,GAAG,CAACT,SAAS,IAAI;MAC3B,oBACI,QAAC,MAAM;QAEH,QAAQ,EAAEA,SAAS,CAACY,UAAW;QAC/B,OAAO,EAAE,MAAM;UAAEb,SAAS,CAACC,SAAS,CAAC;QAAC;MAAE,GAFnCA,SAAS,CAACa,IAAI;QAAA;QAAA;QAAA;MAAA,QAGrB;IAER,CAAC,CAAC,EAGFjB,gBAAgB,CAACgB,UAAU,iBAEvB,QAAC,UAAU;MACX,QAAQ,EAAEhB,gBAAgB,CAACgB,UAAW;MACtC,YAAY,EAAE,MAAMf,mBAAmB,CAAC,CAAC,CAAC,CAAmB;MAAA,uBAE7D;QAAA,wBACA;UAAA,qBAAUD,gBAAgB,CAACiB,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eACpC;UAAA,wBAAajB,gBAAgB,CAACkB,OAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;IACvC;MAAA;MAAA;MAAA;IAAA,QAEN;EAAA;IAAA;IAAA;IAAA;EAAA,QAEO;AAEpB,CAAC;AAAC,GAzDInB,GAAa;EAAA,QAQMJ,aAAa;AAAA;AAAA,KARhCI,GAAa;AA4DnB,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}